diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java
index 5d0222095..e3e8ab3b2 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java
@@ -272,17 +272,13 @@ public class UnusedImportsCheck extends AbstractCheck {
                 || parentType == TokenTypes.METHOD_DEF;
 
         final boolean isQualifiedIdent = parentType == TokenTypes.DOT
+                && !TokenUtil.isOfType(ast.getPreviousSibling(), TokenTypes.DOT)
                 && ast.getNextSibling() != null;
 
-        final boolean isQualifiedNameArrayType = parent.getParent().getType() == TokenTypes.DOT
-                && ast.getNextSibling() != null
-                && ast.getNextSibling().getType() == TokenTypes.ARRAY_DECLARATOR;
-
         if (TokenUtil.isTypeDeclaration(parentType)) {
             currentFrame.addDeclaredType(ast.getText());
         }
-        else if ((!isPossibleDotClassOrInMethod || isQualifiedIdent)
-                    && !isQualifiedNameArrayType) {
+        else if (!isPossibleDotClassOrInMethod || isQualifiedIdent) {
             currentFrame.addReferencedType(ast.getText());
         }
     }
diff --git a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/imports/unusedimports/InputUnusedImportsArrayRef.java b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/imports/unusedimports/InputUnusedImportsArrayRef.java
new file mode 100644
index 000000000..51bed3cee
--- /dev/null
+++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/imports/unusedimports/InputUnusedImportsArrayRef.java
@@ -0,0 +1,24 @@
+/*
+UnusedImports
+processJavadoc = (default)true
+
+
+*/
+
+package com.puppycrawl.tools.checkstyle.checks.imports.unusedimports;
+
+import java.util.HashMap; // ok
+import java.util.HashSet;
+import java.util.Set;
+import java.util.ArrayList; // violation
+
+public class InputUnusedImportsArrayRef {
+
+    private static final Set<String> FOO;
+    static {
+        FOO = new HashSet<>();
+
+        FOO.add( HashMap[].class.getName() );
+        FOO.add( java.util.ArrayList[].class.getName() );
+    }
+}

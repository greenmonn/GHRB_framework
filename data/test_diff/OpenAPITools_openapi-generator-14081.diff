diff --git a/modules/openapi-generator/src/test/java/org/openapitools/codegen/go/GoClientCodegenTest.java b/modules/openapi-generator/src/test/java/org/openapitools/codegen/go/GoClientCodegenTest.java
index 55706dc..7969d71 100644
--- a/modules/openapi-generator/src/test/java/org/openapitools/codegen/go/GoClientCodegenTest.java
+++ b/modules/openapi-generator/src/test/java/org/openapitools/codegen/go/GoClientCodegenTest.java
@@ -261,4 +261,29 @@ public class GoClientCodegenTest {
         TestUtils.assertFileContains(Paths.get(output + "/api_pet.go"),
                 "newErr.error = formatErrorMessage(localVarHTTPResponse.Status, &v)");
     }
+
+    @Test
+    public void verifyApiTestWithNullResponse() throws IOException {
+        File output = Files.createTempDirectory("test").toFile();
+        output.deleteOnExit();
+
+        final CodegenConfigurator configurator = new CodegenConfigurator()
+                .setGeneratorName("go")
+                .setGitUserId("OpenAPITools")
+                .setGitRepoId("openapi-generator")
+                .setInputSpec("src/test/resources/3_0/go/petstore-with-no-response-body.yaml")
+                .setOutputDir(output.getAbsolutePath().replace("\\", "/"));
+
+        DefaultGenerator generator = new DefaultGenerator();
+        List<File> files = generator.opts(configurator.toClientOptInput()).generate();
+        files.forEach(File::deleteOnExit);
+
+        TestUtils.assertFileExists(Paths.get(output + "/test/api_pet_test.go"));
+        TestUtils.assertFileNotContains(Paths.get(output + "/test/api_pet_test.go"),
+                "require.NotNil(t, resp)");
+        TestUtils.assertFileNotContains(Paths.get(output + "/test/api_pet_test.go"),
+                "resp, httpRes, err := apiClient.PetApi.PetDelete(context.Background()).Execute()");
+        TestUtils.assertFileContains(Paths.get(output + "/test/api_pet_test.go"),
+                "httpRes, err := apiClient.PetApi.PetDelete(context.Background()).Execute()");
+    }
 }

diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java
index a2464324c..0d01bc153 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java
@@ -478,7 +478,7 @@ public class EqualsAvoidNullCheck extends AbstractCheck {
     private boolean isStringFieldOrVariableFromThisInstance(DetailAST objCalledOn) {
         final String name = objCalledOn.getText();
         final DetailAST field = getObjectFrame(currentFrame).findField(name);
-        return STRING.equals(getFieldType(field));
+        return field != null && STRING.equals(getFieldType(field));
     }
 
     /**
diff --git a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/equalsavoidnull/InputEqualsAvoidNullSuperClass.java b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/equalsavoidnull/InputEqualsAvoidNullSuperClass.java
new file mode 100644
index 000000000..6ccd15481
--- /dev/null
+++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/equalsavoidnull/InputEqualsAvoidNullSuperClass.java
@@ -0,0 +1,26 @@
+/*
+EqualsAvoidNull
+ignoreEqualsIgnoreCase = (default)false
+
+
+*/
+
+package com.puppycrawl.tools.checkstyle.checks.coding.equalsavoidnull;
+
+public abstract class InputEqualsAvoidNullSuperClass {
+   protected String stringFromBaseClass = "ABC";
+}
+
+class DerivedClass extends InputEqualsAvoidNullSuperClass {
+   protected String classField = "DEF";
+
+    void m1() {
+        if (this.stringFromBaseClass.equals("JKHKJ")) { // ok
+        }
+    }
+
+    void m2() {
+        if (this.classField.equals("JKHKJ")) { // violation
+        }
+    }
+}

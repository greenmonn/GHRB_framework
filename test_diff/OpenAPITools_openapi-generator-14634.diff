diff --git a/modules/openapi-generator/src/test/java/org/openapitools/codegen/templating/handlebars/StringHelpersTest.java b/modules/openapi-generator/src/test/java/org/openapitools/codegen/templating/handlebars/StringHelpersTest.java
index 5bea567..d359402 100644
--- a/modules/openapi-generator/src/test/java/org/openapitools/codegen/templating/handlebars/StringHelpersTest.java
+++ b/modules/openapi-generator/src/test/java/org/openapitools/codegen/templating/handlebars/StringHelpersTest.java
@@ -83,4 +83,53 @@ public class StringHelpersTest {
         template = "{{startsWith asdf b yes='y' no='n'}}";
         evaluate(data, template, "n");
     }
-}
\ No newline at end of file
+
+    @Test(description = "Handlebars StringHelpers.endsWith, section")
+    public void endsWithSectionalTest() throws IOException {
+        HashMap<String, Object> data = new HashMap<String, Object>() {{
+            put("asdf", "asdf");
+            put("df", "df");
+            put("b", "b");
+        }};
+
+        String template = "{{~#endsWith asdf df ~}}yes{{~else~}}no{{~/endsWith~}}";
+        evaluate(data, template, "yes");
+
+        template = "{{~#endsWith asdf b ~}}yes{{~else~}}no{{~/endsWith~}}";
+        evaluate(data, template, "no");
+    }
+
+    @Test(description = "Handlebars StringHelpers.endsWith")
+    public void endsWithTest() throws IOException {
+        HashMap<String, Object> data = new HashMap<String, Object>() {{
+            put("asdf", "asdf");
+            put("ASDF", "ASDF");
+            put("f", "f");
+            put("b", "b");
+        }};
+        evaluate(data, "{{endsWith asdf f}}", "true");
+        evaluate(data, "{{endsWith asdf b}}", "false");
+        evaluate(data, "{{endsWith ASDF f insensitive=true }}", "true");
+        evaluate(data, "{{endsWith ASDF f insensitive=false }}", "false");
+        evaluate(data, "{{endsWith ASDF 'f' insensitive=true }}", "true");
+        evaluate(data, "{{endsWith ASDF b insensitive=true }}", "false");
+        evaluate(data, "{{endsWith ASDF 'b' insensitive=true }}", "false");
+        evaluate(data, "{{endsWith ASDF insensitive=true text='f'}}", "true");
+        evaluate(data, "{{endsWith ASDF insensitive=true text='f' yes='✓' no='✘'}}", "✓");
+        evaluate(data, "{{endsWith ASDF insensitive=false text='f' yes='✓' no='✘'}}", "✘");
+    }
+
+    @Test(description = "Handlebars StringHelpers.endsWith, yes/no override")
+    public void endsWithYesOverrideTest() throws IOException {
+        HashMap<String, Object> data = new HashMap<String, Object>() {{
+            put("asdf", "asdf");
+            put("f", "f");
+            put("b", "b");
+        }};
+        String template = "{{endsWith asdf f yes='y' no='n'}}";
+        evaluate(data, template, "y");
+
+        template = "{{endsWith asdf b yes='y' no='n'}}";
+        evaluate(data, template, "n");
+    }
+}

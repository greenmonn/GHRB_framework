diff --git a/sys/src/test/java/com/alibaba/nacos/sys/env/EnvModuleStateBuilderTest.java b/sys/src/test/java/com/alibaba/nacos/sys/env/EnvModuleStateBuilderTest.java
new file mode 100644
index 0000000..591795c
--- /dev/null
+++ b/sys/src/test/java/com/alibaba/nacos/sys/env/EnvModuleStateBuilderTest.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.nacos.sys.env;
+
+import com.alibaba.nacos.common.utils.VersionUtils;
+import com.alibaba.nacos.sys.module.ModuleState;
+import org.junit.BeforeClass;
+import org.junit.Test;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNull;
+
+public class EnvModuleStateBuilderTest {
+    
+    @BeforeClass
+    public static void setUp() throws Exception {
+        System.setProperty(Constants.STANDALONE_MODE_PROPERTY_NAME, "true");
+        EnvUtil.setIsStandalone(null);
+    }
+    
+    @Test
+    public void testBuild() {
+        ModuleState actual = new EnvModuleStateBuilder().build();
+        assertEquals(Constants.SYS_MODULE, actual.getModuleName());
+        assertEquals(EnvUtil.STANDALONE_MODE_ALONE, actual.getStates().get(Constants.STANDALONE_MODE_STATE));
+        assertNull(EnvUtil.FUNCTION_MODE_NAMING, actual.getStates().get(Constants.FUNCTION_MODE_STATE));
+        assertEquals(VersionUtils.version, actual.getStates().get(Constants.NACOS_VERSION));
+    }
+}
\ No newline at end of file
diff --git a/sys/src/test/java/com/alibaba/nacos/sys/module/ModuleStateHolderTest.java b/sys/src/test/java/com/alibaba/nacos/sys/module/ModuleStateHolderTest.java
new file mode 100644
index 0000000..4073374
--- /dev/null
+++ b/sys/src/test/java/com/alibaba/nacos/sys/module/ModuleStateHolderTest.java
@@ -0,0 +1,77 @@
+/*
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.nacos.sys.module;
+
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+import org.springframework.test.util.ReflectionTestUtils;
+
+import java.util.Map;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+
+public class ModuleStateHolderTest {
+    
+    private Map<String, ModuleState> moduleStateMap;
+    
+    @Before
+    public void setUp() throws Exception {
+        moduleStateMap = (Map<String, ModuleState>) ReflectionTestUtils
+                .getField(ModuleStateHolder.getInstance(), ModuleStateHolder.class, "moduleStates");
+    }
+    
+    @After
+    public void tearDown() throws Exception {
+    }
+    
+    @Test
+    public void testGetModuleState() {
+        assertNotNull(ModuleStateHolder.getInstance().getModuleState("mock"));
+    }
+    
+    @Test
+    public void testGetAllModuleStates() {
+        assertEquals(2, ModuleStateHolder.getInstance().getAllModuleStates().size());
+    }
+    
+    @Test
+    public void testGetStateValueByNameFound() {
+        assertEquals("test", ModuleStateHolder.getInstance().getStateValueByName("mock", "test"));
+        assertEquals("test", ModuleStateHolder.getInstance().getStateValueByName("mock", "test", "aaa"));
+    }
+    
+    @Test
+    public void testGetStateValueByNameWithoutModuleState() {
+        assertEquals("", ModuleStateHolder.getInstance().getStateValueByName("non-exist", "test"));
+        assertEquals("aaa", ModuleStateHolder.getInstance().getStateValueByName("non-exist", "test", "aaa"));
+    }
+    
+    @Test
+    public void testGetStateValueByNameWithoutStateName() {
+        assertEquals("", ModuleStateHolder.getInstance().getStateValueByName("mock", "non-exist"));
+        assertEquals("aaa", ModuleStateHolder.getInstance().getStateValueByName("mock", "non-exist", "aaa"));
+    }
+    
+    @Test
+    public void testSearchStateValue() {
+        assertEquals("test", ModuleStateHolder.getInstance().searchStateValue("test", "aaa"));
+        assertEquals("aaa", ModuleStateHolder.getInstance().searchStateValue("non-exist", "aaa"));
+    }
+    
+}
\ No newline at end of file
diff --git a/sys/src/test/java/com/alibaba/nacos/sys/module/mock/ExceptionMockModuleStateBuilder.java b/sys/src/test/java/com/alibaba/nacos/sys/module/mock/ExceptionMockModuleStateBuilder.java
new file mode 100644
index 0000000..e0a313b
--- /dev/null
+++ b/sys/src/test/java/com/alibaba/nacos/sys/module/mock/ExceptionMockModuleStateBuilder.java
@@ -0,0 +1,28 @@
+/*
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.nacos.sys.module.mock;
+
+import com.alibaba.nacos.sys.module.ModuleState;
+import com.alibaba.nacos.sys.module.ModuleStateBuilder;
+
+public class ExceptionMockModuleStateBuilder implements ModuleStateBuilder {
+    
+    @Override
+    public ModuleState build() {
+        throw new RuntimeException("test");
+    }
+}
diff --git a/sys/src/test/java/com/alibaba/nacos/sys/module/mock/MockModuleStateBuilder.java b/sys/src/test/java/com/alibaba/nacos/sys/module/mock/MockModuleStateBuilder.java
new file mode 100644
index 0000000..33bd884
--- /dev/null
+++ b/sys/src/test/java/com/alibaba/nacos/sys/module/mock/MockModuleStateBuilder.java
@@ -0,0 +1,30 @@
+/*
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.nacos.sys.module.mock;
+
+import com.alibaba.nacos.sys.module.ModuleState;
+import com.alibaba.nacos.sys.module.ModuleStateBuilder;
+
+public class MockModuleStateBuilder implements ModuleStateBuilder {
+    
+    @Override
+    public ModuleState build() {
+        ModuleState result = new ModuleState("mock");
+        result.newState("test", "test").newState("mock", true);
+        return result;
+    }
+}

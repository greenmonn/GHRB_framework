diff --git a/test/src/test/java/org/apache/rocketmq/test/autoswitchrole/AutoSwitchRoleBase.java b/test/src/test/java/org/apache/rocketmq/test/autoswitchrole/AutoSwitchRoleBase.java
index f9743f2..bc2c0dd 100644
--- a/test/src/test/java/org/apache/rocketmq/test/autoswitchrole/AutoSwitchRoleBase.java
+++ b/test/src/test/java/org/apache/rocketmq/test/autoswitchrole/AutoSwitchRoleBase.java
@@ -58,7 +58,7 @@ public class AutoSwitchRoleBase {
     protected static List<BrokerController> brokerList;
     private static SocketAddress bornHost;
     private static SocketAddress storeHost;
-    private static Integer number = 0;
+    private static int number = 0;
 
     protected static void initialize() {
         brokerList = new ArrayList<>();
@@ -69,28 +69,28 @@ public class AutoSwitchRoleBase {
         }
     }
 
-    public static Integer nextPort() throws IOException {
+    public static int nextPort() throws IOException {
         return nextPort(1001, 9999);
     }
 
-    public static Integer nextPort(Integer minPort, Integer maxPort) throws IOException {
+    public static int nextPort(int minPort, int maxPort) throws IOException {
+
         Random random = new Random();
         int tempPort;
         int port;
-        try {
-            while (true) {
+        while (true) {
+            try {
                 tempPort = random.nextInt(maxPort) % (maxPort - minPort + 1) + minPort;
                 ServerSocket serverSocket = new ServerSocket(tempPort);
                 port = serverSocket.getLocalPort();
                 serverSocket.close();
                 break;
+            } catch (IOException ignored) {
+                if (number > 200) {
+                    throw new IOException("This server's open ports are temporarily full!");
+                }
+                ++number;
             }
-        } catch (Exception ignored) {
-            if (number > 200) {
-                throw new IOException("This server's open ports are temporarily full!");
-            }
-            number++;
-            port = nextPort(minPort, maxPort);
         }
         number = 0;
         return port;

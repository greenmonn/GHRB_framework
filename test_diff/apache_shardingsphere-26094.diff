diff --git a/infra/merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/local/LocalDataMergedResultTest.java b/infra/merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/local/LocalDataMergedResultTest.java
index 2f6ea41..1f50709 100644
--- a/infra/merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/local/LocalDataMergedResultTest.java
+++ b/infra/merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/local/LocalDataMergedResultTest.java
@@ -65,6 +65,13 @@ class LocalDataMergedResultTest {
     }
     
     @Test
+    void assertGetCharacterStream() {
+        List<Object> row = Collections.singletonList("value");
+        LocalDataMergedResult actual = new LocalDataMergedResult(Collections.singletonList(new LocalDataQueryResultRow(row)));
+        assertThrows(SQLFeatureNotSupportedException.class, () -> actual.getCharacterStream(1));
+    }
+    
+    @Test
     void assertWasNull() {
         List<Object> row = Collections.singletonList("value");
         LocalDataMergedResult actual = new LocalDataMergedResult(Collections.singletonList(new LocalDataQueryResultRow(row)));
diff --git a/infra/merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/transparent/TransparentMergedResultTest.java b/infra/merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/transparent/TransparentMergedResultTest.java
index 138de55..6cc7a9d 100644
--- a/infra/merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/transparent/TransparentMergedResultTest.java
+++ b/infra/merge/src/test/java/org/apache/shardingsphere/infra/merge/result/impl/transparent/TransparentMergedResultTest.java
@@ -21,6 +21,7 @@ import org.apache.shardingsphere.infra.executor.sql.execute.result.query.QueryRe
 import org.junit.jupiter.api.Test;
 
 import java.io.InputStream;
+import java.io.Reader;
 import java.sql.Date;
 import java.sql.SQLException;
 
@@ -68,6 +69,15 @@ class TransparentMergedResultTest {
     }
     
     @Test
+    void assertGetCharacterStream() throws SQLException {
+        QueryResult queryResult = mock(QueryResult.class);
+        Reader value = mock(Reader.class);
+        when(queryResult.getCharacterStream(1)).thenReturn(value);
+        TransparentMergedResult actual = new TransparentMergedResult(queryResult);
+        assertThat(actual.getCharacterStream(1), is(value));
+    }
+    
+    @Test
     void assertWasNull() throws SQLException {
         TransparentMergedResult actual = new TransparentMergedResult(mock(QueryResult.class));
         assertFalse(actual.wasNull());

diff --git a/test/e2e-v2/cases/virtual-mq/docker-compose.yml b/test/e2e-v2/cases/virtual-mq/docker-compose.yml
new file mode 100644
index 0000000..38f9d68
--- /dev/null
+++ b/test/e2e-v2/cases/virtual-mq/docker-compose.yml
@@ -0,0 +1,83 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+version: '2.1'
+
+services:
+  oap:
+    environment:
+      SW_METER_ANALYZER_ACTIVE_FILES:
+    extends:
+      file: ../../script/docker-compose/base-compose.yml
+      service: oap
+    ports:
+      - 12800
+    networks:
+      e2e:
+
+  provider:
+    extends:
+      file: ../../script/docker-compose/base-compose.yml
+      service: provider
+    environment:
+      SW_METER_REPORT_INTERVAL: 5
+      kafka_enable: "true"
+      kafka_topic: topic
+      kafka_server: kafka:9092
+    depends_on:
+      - oap
+      - kafka
+    ports:
+      - "9090:9090"
+    networks:
+      e2e:
+
+  consumer:
+    extends:
+      file: ../../script/docker-compose/base-compose.yml
+      service: consumer
+    environment:
+      SW_AGENT_COLLECTOR_BACKEND_SERVICES: oap:11800
+      SW_AGENT_NAME: e2e-service-consumer
+      kafka_enable: "true"
+      kafka_topic: topic
+      kafka_server: kafka:9092
+    depends_on:
+      - oap
+      - kafka
+    ports:
+      - "9092:9092"
+    networks:
+      e2e:
+  zookeeper:
+    image: 'bitnami/zookeeper:latest'
+    environment:
+      - ALLOW_ANONYMOUS_LOGIN=yes
+    networks:
+      e2e:
+  kafka:
+    image: 'bitnami/kafka:latest'
+    environment:
+      - KAFKA_BROKER_ID=1
+      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
+      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
+      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
+      - ALLOW_PLAINTEXT_LISTENER=yes
+    depends_on:
+      - zookeeper
+    networks:
+      e2e:
+networks:
+  e2e:
diff --git a/test/e2e-v2/cases/virtual-mq/e2e.yaml b/test/e2e-v2/cases/virtual-mq/e2e.yaml
new file mode 100644
index 0000000..d159763
--- /dev/null
+++ b/test/e2e-v2/cases/virtual-mq/e2e.yaml
@@ -0,0 +1,44 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# This file is used to show how to write configuration files and can be used to test.
+
+setup:
+  env: compose
+  file: docker-compose.yml
+  timeout: 20m
+  init-system-environment: ../../script/env
+  steps:
+    - name: set PATH
+      command: export PATH=/tmp/skywalking-infra-e2e/bin:$PATH
+    - name: install yq
+      command: bash test/e2e-v2/script/prepare/setup-e2e-shell/install.sh yq
+    - name: install swctl
+      command: bash test/e2e-v2/script/prepare/setup-e2e-shell/install.sh swctl
+
+trigger:
+  action: http
+  interval: 3s
+  times: 10
+  url: http://${provider_host}:${provider_9090}/kafka/send
+  method: GET
+
+verify:
+  retry:
+    count: 20
+    interval: 3s
+  cases:
+    - includes:
+        - mq-cases.yaml
diff --git a/test/e2e-v2/cases/virtual-mq/expected/metrics-has-value0.yml b/test/e2e-v2/cases/virtual-mq/expected/metrics-has-value0.yml
new file mode 100644
index 0000000..ce1f3d8
--- /dev/null
+++ b/test/e2e-v2/cases/virtual-mq/expected/metrics-has-value0.yml
@@ -0,0 +1,19 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+{{- contains . }}
+- key: {{ notEmpty .key }}
+  value: {{ ge .value 0 }}
+{{- end }}
diff --git a/test/e2e-v2/cases/virtual-mq/expected/service-endpoint.yml b/test/e2e-v2/cases/virtual-mq/expected/service-endpoint.yml
new file mode 100644
index 0000000..48f9ec5
--- /dev/null
+++ b/test/e2e-v2/cases/virtual-mq/expected/service-endpoint.yml
@@ -0,0 +1,21 @@
+# Licensed to Apache Software Foundation (ASF) under one or more contributor
+# license agreements. See the NOTICE file distributed with
+# this work for additional information regarding copyright
+# ownership. Apache Software Foundation (ASF) licenses this file to you under
+# the Apache License, Version 2.0 (the "License"); you may
+# not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+
+{{- contains . }}
+- id: {{ b64enc "kafka:9092" }}.0_{{ b64enc "topic" }}
+  name: topic
+{{- end}}
diff --git a/test/e2e-v2/cases/virtual-mq/expected/service.yml b/test/e2e-v2/cases/virtual-mq/expected/service.yml
new file mode 100644
index 0000000..19e1698
--- /dev/null
+++ b/test/e2e-v2/cases/virtual-mq/expected/service.yml
@@ -0,0 +1,24 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+{{- contains . }}
+- id: {{ b64enc "kafka:9092" }}.0
+  name: kafka:9092
+  group: ""
+  shortname: kafka:9092
+  normal: false
+  layers:
+    - VIRTUAL_MQ
+{{- end }}
diff --git a/test/e2e-v2/cases/virtual-mq/mq-cases.yaml b/test/e2e-v2/cases/virtual-mq/mq-cases.yaml
new file mode 100644
index 0000000..ea4a5be
--- /dev/null
+++ b/test/e2e-v2/cases/virtual-mq/mq-cases.yaml
@@ -0,0 +1,28 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+  cases:
+    # service list
+    - query: swctl --display yaml --base-url=http://${oap_host}:${oap_12800}/graphql service ls
+      expected: expected/service.yml
+    # service endpoint service-name=kafka:9092
+    - query: swctl --display yaml --base-url=http://${oap_host}:${oap_12800}/graphql endpoint list --service-id=a2Fma2E6OTA5Mg==.0
+      expected: expected/service-endpoint.yml
+    # endpoint metrics
+    - query: swctl --display yaml --base-url=http://${oap_host}:${oap_12800}/graphql metrics linear --name=mq_service_consume_latency --service-id=a2Fma2E6OTA5Mg==.0 |yq e 'to_entries' -
+      expected: expected/metrics-has-value0.yml
+    # endpoint metrics
+    - query: swctl --display yaml --base-url=http://${oap_host}:${oap_12800}/graphql metrics linear --name=mq_endpoint_consume_cpm --endpoint-name='topic' --service-id=a2Fma2E6OTA5Mg==.0 |yq e 'to_entries' -
+      expected: expected/metrics-has-value0.yml
\ No newline at end of file
diff --git a/test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/KafkaConsumer.java b/test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/KafkaConsumer.java
new file mode 100644
index 0000000..35d5f7d
--- /dev/null
+++ b/test/e2e-v2/java-test-service/e2e-service-consumer/src/main/java/org/apache/skywalking/e2e/KafkaConsumer.java
@@ -0,0 +1,62 @@
+/*
+ *   Licensed to the Apache Software Foundation (ASF) under one or more
+ *   contributor license agreements.  See the NOTICE file distributed with
+ *   this work for additional information regarding copyright ownership.
+ *   The ASF licenses this file to You under the Apache License, Version 2.0
+ *   (the "License"); you may not use this file except in compliance with
+ *   the License.  You may obtain a copy of the License at
+ *
+ *       http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *   Unless required by applicable law or agreed to in writing, software
+ *   distributed under the License is distributed on an "AS IS" BASIS,
+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *   See the License for the specific language governing permissions and
+ *   limitations under the License.
+ */
+
+package org.apache.skywalking.e2e;
+
+import java.io.IOException;
+import java.net.InetAddress;
+import java.time.Duration;
+import java.util.Collections;
+import java.util.Optional;
+import java.util.Properties;
+import java.util.concurrent.TimeoutException;
+import javax.annotation.PostConstruct;
+import lombok.extern.slf4j.Slf4j;
+import org.apache.kafka.clients.consumer.ConsumerRecords;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;
+import org.springframework.stereotype.Component;
+
+@Component
+@Slf4j
+@ConditionalOnExpression("#{'true'.equals(environment['kafka_enable'])}")
+public class KafkaConsumer {
+
+    @PostConstruct
+    public void startConsumer() throws IOException, TimeoutException {
+        String topic = Optional.ofNullable(System.getenv("kafka_topic")).orElse("topic");
+        String server = Optional.ofNullable(System.getenv("kafka_server")).orElse("kafka:9092");
+
+        Properties config = new Properties();
+        config.put("client.id", InetAddress.getLocalHost().getHostName());
+        config.put("bootstrap.servers", server);
+        config.put("group.id", "a");
+        config.put("key.deserializer", "org.apache.kafka.common.serialization.ByteArrayDeserializer");
+        config.put("value.deserializer", "org.apache.kafka.common.serialization.ByteArrayDeserializer");
+        final org.apache.kafka.clients.consumer.KafkaConsumer<String, String> consumer = new org.apache.kafka.clients.consumer.KafkaConsumer<>(config);
+        consumer.subscribe(Collections.singletonList(topic));
+        new Thread(() -> {
+            while (true) {
+                try {
+                    final ConsumerRecords<String, String> poll = consumer.poll(Duration.ofHours(2));
+                    poll.forEach(e -> log.info("receive msg : {}", e));
+                } catch (Exception e) {
+                    e.printStackTrace();
+                }
+            }
+        }).start();
+    }
+}
diff --git a/test/e2e-v2/java-test-service/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/mq/KafkaController.java b/test/e2e-v2/java-test-service/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/mq/KafkaController.java
new file mode 100644
index 0000000..5afa604
--- /dev/null
+++ b/test/e2e-v2/java-test-service/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/mq/KafkaController.java
@@ -0,0 +1,62 @@
+/*
+ *   Licensed to the Apache Software Foundation (ASF) under one or more
+ *   contributor license agreements.  See the NOTICE file distributed with
+ *   this work for additional information regarding copyright ownership.
+ *   The ASF licenses this file to You under the Apache License, Version 2.0
+ *   (the "License"); you may not use this file except in compliance with
+ *   the License.  You may obtain a copy of the License at
+ *
+ *       http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *   Unless required by applicable law or agreed to in writing, software
+ *   distributed under the License is distributed on an "AS IS" BASIS,
+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *   See the License for the specific language governing permissions and
+ *   limitations under the License.
+ */
+
+package org.apache.skywalking.e2e.mq;
+
+import java.net.InetAddress;
+import java.net.UnknownHostException;
+import java.util.Optional;
+import java.util.Properties;
+import java.util.concurrent.ExecutionException;
+import javax.annotation.PostConstruct;
+import lombok.extern.slf4j.Slf4j;
+import org.apache.kafka.clients.producer.KafkaProducer;
+import org.apache.kafka.clients.producer.ProducerRecord;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+@Slf4j
+@RestController
+@ConditionalOnExpression("#{'true'.equals(environment['kafka_enable'])}")
+public class KafkaController {
+
+    private KafkaProducer<Object, Object> objectObjectKafkaProducer;
+
+    @GetMapping(value = "kafka/send")
+    public String sendMsg() throws ExecutionException, InterruptedException {
+
+        String topic = Optional.ofNullable(System.getenv("kafka_topic")).orElse("topic");
+
+        objectObjectKafkaProducer.send(
+            new ProducerRecord<>(topic, 0, System.currentTimeMillis(), "a".getBytes(), "test".getBytes())
+        ).get();
+        return "ok";
+    }
+
+    @PostConstruct
+    public void init() throws UnknownHostException {
+        String server = Optional.ofNullable(System.getenv("kafka_server")).orElse("kafka:9092");
+        Properties config = new Properties();
+        config.put("client.id", InetAddress.getLocalHost().getHostName());
+        config.put("bootstrap.servers", server);
+        config.put("acks", "all");
+        config.put("key.serializer", "org.apache.kafka.common.serialization.ByteArraySerializer");
+        config.put("value.serializer", "org.apache.kafka.common.serialization.ByteArraySerializer");
+        objectObjectKafkaProducer = new KafkaProducer<>(config);
+    }
+}
diff --git a/test/e2e-v2/java-test-service/pom.xml b/test/e2e-v2/java-test-service/pom.xml
index c9d4430..21f40ee 100644
--- a/test/e2e-v2/java-test-service/pom.xml
+++ b/test/e2e-v2/java-test-service/pom.xml
@@ -111,6 +111,13 @@
             <version>${lombok.version}</version>
             <scope>provided</scope>
         </dependency>
+
+        <dependency>
+            <groupId>org.apache.kafka</groupId>
+            <artifactId>kafka-clients</artifactId>
+            <version>2.8.0</version>
+        </dependency>
+
     </dependencies>
 
     <build>

diff --git a/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java b/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java
index 01e647e..b1eab5a 100644
--- a/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java
+++ b/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java
@@ -67,7 +67,7 @@ class JavaParserTest {
         String code = "@interface AD { String foo(); }";
         CompilationUnit cu = parse(code);
         AnnotationMemberDeclaration memberDeclaration = cu.getAnnotationDeclarationByName("AD").get().getMember(0).asAnnotationMemberDeclaration();
-        assertTrue(memberDeclaration.getRange().isPresent());
+        assertTrue(memberDeclaration.hasRange());
         assertEquals(new Range(new Position(1, 17), new Position(1, 29)), memberDeclaration.getRange().get());
     }
 
@@ -76,7 +76,7 @@ class JavaParserTest {
         String code = "@interface AD \\u007B String foo(); \\u007D";
         CompilationUnit cu = parseWithUnicodeEscapes(code).getResult().get();
         AnnotationMemberDeclaration memberDeclaration = cu.getAnnotationDeclarationByName("AD").get().getMember(0).asAnnotationMemberDeclaration();
-        assertTrue(memberDeclaration.getRange().isPresent());
+        assertTrue(memberDeclaration.hasRange());
         assertEquals(new Range(new Position(1, 22), new Position(1, 34)), memberDeclaration.getRange().get());
     }
 
@@ -102,7 +102,7 @@ class JavaParserTest {
         String code = "@interface AD { String[] foo(); }";
         CompilationUnit cu = parse(code);
         AnnotationMemberDeclaration memberDeclaration = cu.getAnnotationDeclarationByName("AD").get().getMember(0).asAnnotationMemberDeclaration();
-        assertTrue(memberDeclaration.getRange().isPresent());
+        assertTrue(memberDeclaration.hasRange());
         assertEquals(new Range(new Position(1, 17), new Position(1, 31)), memberDeclaration.getRange().get());
     }
 

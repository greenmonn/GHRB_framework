diff --git a/src/test/java/org/jsoup/parser/AttributeParseTest.java b/src/test/java/org/jsoup/parser/AttributeParseTest.java
index d328b9f..60fadbc 100644
--- a/src/test/java/org/jsoup/parser/AttributeParseTest.java
+++ b/src/test/java/org/jsoup/parser/AttributeParseTest.java
@@ -96,4 +96,31 @@ public class AttributeParseTest {
         doc = Jsoup.parse(html, "", Parser.xmlParser());
         assertEquals("<img onerror=\"doMyJob\" />", doc.html());
     }
+
+    // Test the attribute name like `xlink:href`
+    // Issue #1341
+    // https://github.com/jhy/jsoup/issues/1341
+    @Test public void handleUnboundPrefixofXlink() {
+        String h = "<!doctype html>\n" +
+                "<html lang=\"de\">\n" +
+                "    <head>\n" +
+                "\n" +
+                "    </head>\n" +
+                "    <body>\n" +
+                "\t<test:h1>UnboundPrefix</test:h1>\n" +
+                "\t<svg width=\"180\" height=\"180\" xlink:href=\"UnboundPrefix\">\n" +
+                "        \t<rect x=\"20\" y=\"20\" rx=\"20\" ry=\"20\" width=\"100\" height=\"100\" style=\"fill:lightgray; stroke:#1c87c9; stroke-width:4;\"/>\n" +
+                "      \t</svg>\n" +
+                "    </body>\n" +
+                "</html>\n";
+
+        Document doc = Jsoup.parse(h);
+
+        Element rv = doc.select("body").get(0).children().get(1);
+
+        assertEquals("xlinkU00003Ahref", rv.attributes().asList().get(2).getConvertedKey());
+
+        assertEquals("UnboundPrefix", rv.attributes().asList().get(2).getValue());
+        assertEquals("UnboundPrefix", rv.attributes().get("xlink:href"));
+    }
 }
diff --git a/src/test/java/org/jsoup/parser/TagTest.java b/src/test/java/org/jsoup/parser/TagTest.java
index 65a794d..a98f244 100644
--- a/src/test/java/org/jsoup/parser/TagTest.java
+++ b/src/test/java/org/jsoup/parser/TagTest.java
@@ -1,8 +1,12 @@
 package org.jsoup.parser;
 
+import org.jsoup.Jsoup;
 import org.jsoup.MultiLocaleExtension.MultiLocaleTest;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
 import org.junit.jupiter.api.Test;
 
+import java.util.List;
 import java.util.Locale;
 
 import static org.junit.jupiter.api.Assertions.*;
@@ -81,4 +85,28 @@ public class TagTest {
         assertTrue(Tag.isKnownTag("div"));
         assertFalse(Tag.isKnownTag("explain"));
     }
+
+    // Test the tag containing symbols like `:`
+    // Issue #1341
+    // https://github.com/jhy/jsoup/issues/1341
+    @Test public void handleSymbolTags() {
+        String h = "<!doctype html>\n" +
+                "<html lang=\"de\">\n" +
+                "    <head>\n" +
+                "\n" +
+                "    </head>\n" +
+                "    <body>\n" +
+                "\t<test:h1>UnboundPrefix</test:h1>\n" +
+                "\t<svg width=\"180\" height=\"180\" xlink:href=\"UnboundPrefix\">\n" +
+                "        \t<rect x=\"20\" y=\"20\" rx=\"20\" ry=\"20\" width=\"100\" height=\"100\" style=\"fill:lightgray; stroke:#1c87c9; stroke-width:4;\"/>\n" +
+                "      \t</svg>\n" +
+                "    </body>\n" +
+                "</html>\n";
+
+        Document doc = Jsoup.parse(h);
+
+        Element rv = doc.select("body").get(0).children().get(0);
+        assertEquals("testU00003Ah1", rv.tag().unicodeName());
+        assertEquals("test:h1", rv.tagName());
+    }
 }

diff --git a/common/src/test/java/io/netty/util/HashedWheelTimerTest.java b/common/src/test/java/io/netty/util/HashedWheelTimerTest.java
index 047c033..62ebfde 100644
--- a/common/src/test/java/io/netty/util/HashedWheelTimerTest.java
+++ b/common/src/test/java/io/netty/util/HashedWheelTimerTest.java
@@ -19,6 +19,7 @@ import org.junit.jupiter.api.Test;
 
 import java.util.concurrent.BlockingQueue;
 import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.Executor;
 import java.util.concurrent.Executors;
 import java.util.concurrent.LinkedBlockingQueue;
 import java.util.concurrent.RejectedExecutionException;
@@ -164,6 +165,36 @@ public class HashedWheelTimerTest {
     }
 
     @Test
+    public void testExecutionOnTaskExecutor() throws InterruptedException {
+        int timeout = 10;
+
+        final CountDownLatch latch = new CountDownLatch(1);
+        final CountDownLatch timeoutLatch = new CountDownLatch(1);
+        Executor executor = new Executor() {
+            @Override
+            public void execute(Runnable command) {
+                try {
+                    command.run();
+                } finally {
+                    latch.countDown();
+                }
+            }
+        };
+        final HashedWheelTimer timer = new HashedWheelTimer(Executors.defaultThreadFactory(), 100,
+                TimeUnit.MILLISECONDS, 32, true, 2, executor);
+        timer.newTimeout(new TimerTask() {
+            @Override
+            public void run(final Timeout timeout) throws Exception {
+                timeoutLatch.countDown();
+            }
+        }, timeout, TimeUnit.MILLISECONDS);
+
+        latch.await();
+        timeoutLatch.await();
+        timer.stop();
+    }
+
+    @Test
     public void testRejectedExecutionExceptionWhenTooManyTimeoutsAreAddedBackToBack() {
         HashedWheelTimer timer = new HashedWheelTimer(Executors.defaultThreadFactory(), 100,
             TimeUnit.MILLISECONDS, 32, true, 2);

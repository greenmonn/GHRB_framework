diff --git a/test/src/test/java/io/seata/core/rpc/netty/TmNettyClientTest.java b/test/src/test/java/io/seata/core/rpc/netty/TmNettyClientTest.java
index eeb84f5..ba2ab42 100644
--- a/test/src/test/java/io/seata/core/rpc/netty/TmNettyClientTest.java
+++ b/test/src/test/java/io/seata/core/rpc/netty/TmNettyClientTest.java
@@ -53,7 +53,7 @@ public class TmNettyClientTest {
             @Override
             public void run() {
                 NettyRemotingServer nettyRemotingServer = new NettyRemotingServer(workingThreads);
-                nettyRemotingServer.setHandler(new DefaultCoordinator(nettyRemotingServer));
+                nettyRemotingServer.setHandler(DefaultCoordinator.getInstance(nettyRemotingServer));
                 UUIDGenerator.init(1L);
                 nettyRemotingServer.init();
             }
@@ -88,7 +88,7 @@ public class TmNettyClientTest {
             @Override
             public void run() {
                 NettyRemotingServer nettyRemotingServer = new NettyRemotingServer(workingThreads);
-                nettyRemotingServer.setHandler(new DefaultCoordinator(nettyRemotingServer));
+                nettyRemotingServer.setHandler(DefaultCoordinator.getInstance(nettyRemotingServer));
                 UUIDGenerator.init(1L);
                 nettyRemotingServer.init();
             }
@@ -114,7 +114,7 @@ public class TmNettyClientTest {
             @Override
             public void run() {
                 NettyRemotingServer nettyRemotingServer = new NettyRemotingServer(workingThreads);
-                nettyRemotingServer.setHandler(new DefaultCoordinator(nettyRemotingServer));
+                nettyRemotingServer.setHandler(DefaultCoordinator.getInstance(nettyRemotingServer));
                 UUIDGenerator.init(1L);
                 nettyRemotingServer.init();
             }
diff --git a/test/src/test/java/io/seata/saga/engine/db/AbstractServerTest.java b/test/src/test/java/io/seata/saga/engine/db/AbstractServerTest.java
index 49608d5..c2bb7ad 100644
--- a/test/src/test/java/io/seata/saga/engine/db/AbstractServerTest.java
+++ b/test/src/test/java/io/seata/saga/engine/db/AbstractServerTest.java
@@ -15,6 +15,11 @@
  */
 package io.seata.saga.engine.db;
 
+import java.io.File;
+import java.util.concurrent.LinkedBlockingQueue;
+import java.util.concurrent.ThreadPoolExecutor;
+import java.util.concurrent.TimeUnit;
+
 import io.seata.common.XID;
 import io.seata.common.util.NetUtil;
 import io.seata.core.constants.ConfigurationKeys;
@@ -26,12 +31,6 @@ import io.seata.server.coordinator.DefaultCoordinator;
 import io.seata.server.metrics.MetricsManager;
 import io.seata.server.session.SessionHolder;
 
-import java.io.File;
-import java.io.IOException;
-import java.util.concurrent.LinkedBlockingQueue;
-import java.util.concurrent.ThreadPoolExecutor;
-import java.util.concurrent.TimeUnit;
-
 /**
  * Abstract Server Test
  *
@@ -65,7 +64,7 @@ public abstract class AbstractServerTest {
                 //log store mode : file„ÄÅdb
                 SessionHolder.init(parameterParser.getStoreMode());
 
-                DefaultCoordinator coordinator = new DefaultCoordinator(nettyServer);
+                DefaultCoordinator coordinator = DefaultCoordinator.getInstance(nettyServer);
                 coordinator.init();
                 nettyServer.setHandler(coordinator);
                 // register ShutdownHook
